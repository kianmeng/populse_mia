# Dictionary MRI by IRMaGe - Grenoble, 2017 July.
#
#  Important :      only developpers and advanced users can modified this database (the others users can used the file DictionaryMRI_Bruker_Users.yml which is in the same directory)
#
#  YAML validator online :    see http://yaml-online-parser.appspot.com/ , copy all this text (Ctrl-A and Ctrl-C) and paste in the left case (Ctrl-V) of the web page.
#                                           if the Output case don't show red error message, it's ok !
#
# the structure is as follows :
#
#
#dictionaryMRI:
#
#  Label MRI:
#     where:
#          file :           Dirfile, DicomDir if it exist
#          keyName :        tag Dicom 
#          type :           string, float, int
#          format :         "hh:mn:ss dd/MM/yyyy" , "dd/MM/yyyy hh:mn:ss" for date, duree,... (Put the parameter in quote "" !)
#                           
#          units :          um , mm , cm , m (for distance)
#                           us , ms , s , mn , h (for time)
#                           degree (for angle)
#                           mHz , Hz , KHz , MHz , GHz (for frequency)         
#    viewer:
#          category :       (category of your choice)
#    json:
#          tagJson :        same tag as Dicom if it exists , a tag of your choice otherwise
#          type :           (see before)
#          format :         (see before)
#          units :          (see before)
#
#---------------------------------- DICOM ------------------------------------------
dictionaryMRI:

  Specific Character:
                   where:  {file: ~, keyName: Specific Character Set, type: string, format: ~, units: ~}
                   viewer: {category: Specification}
                   json:   {tagJson: ~, type: ~, format: ~, units: ~}
                   
  Coding Scheme Designator:
                   where:  {file: ~, keyName: Coding Scheme Designator, type: string, format: ~, units: ~}
                   viewer: {category: Specification}
                   json:   {tagJson: ~, type: ~, format: ~, units: ~}