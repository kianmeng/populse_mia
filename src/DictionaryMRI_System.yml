# Dictionary MRI by IRMaGe - Grenoble, 2017 July.
#
#  Important :      only developpers and advanced users can modified this database (the others users can used the file DictionaryMRI_Bruker_User.yml which is in the same directory)
#
#  YAML validator online :    see http://yaml-online-parser.appspot.com/ , copy all this text (Ctrl-A and Ctrl-C) and paste in the left case (Ctrl-V) of the web page.
#                                           if the Output case don't show red error message, it's ok !
#
# the structure is as follows :
#
#
#dictionaryMRI:
#
#  Label MRI:
#     where'Constructor':
#          file :           'subject' , 'visu_pars' , 'method' , 'acqp' or 'reco' (for Bruker Paravasion 5 , Paravision 6)
#                           'par , xml' (for Philips Achieva PAR 4.2 , Xml)
#                           'Dirfile, DicomDir or ~ (for Dicom)
#                           'niftiheader' or 'json' (for Nifti)
#                            
#          keyName :        $'nameparameter'= (for Bruker)
#                           tag without [],(),<> and its elements which are inside (for Philips)
#                           tag (for Dicom)
#                           tag (for Nifti)
#                            
#          type :           string, float, int
#          format :         "HH:mm:ss dd/MM/yyyy" , "dd/MM/yyyy HH:mm:ss" ,"SSS" (ms) for date, duree,... (Put the parameter in quote "" !)
#          units : (not yet operational)
#                           um , mm , cm , m (for distance)
#                           us , ms , s , mn , h (for time)
#                           degree (for angle)
#                           mHz , Hz , KHz , MHz , GHz (for frequency)         
#    viewer:
#          category :       (category of your choice)
#
#    json:
#          tagJson :        same tag as Dicom if it exists , a tag of your choice otherwise
#          type :           (see before)
#          format :         (see before)
#          units :          (not yet operational)
#
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
dictionaryMRI:

  Acquisition Date:
                  whereBruker:  {file: visu_pars, keyName: $VisuAcqDate=, type: string, format: "yyyy-MM-dd'T'HH:mm:ss','SSSZZZZ or HH:mm:ss dd MMM yyyy", units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: Examination date/time ; Examination Date, type: string ; string, format: "yyyy.MM.dd / HH:mm:ss ; yyyy.MM.dd", units: ~}
                  whereDicom:   {file: ~, keyName: Image Date, type: string, format: "yyyyMMdd", units: ~}
                  whereNifti:   {file: json, keyName: AcquisitionDate, type: string, format: "yyyy-MM-dd HH:mm:ss", units: ~}
                  
                  viewer: {category: Equipment}
                  json:   {tagJson: AcquisitionDate, type: string, format: "yyyy-MM-dd HH:mm:ss", units: ~}

  Acquisition Time:
                  whereBruker:  {file: visu_pars, keyName: $VisuAcqScanTime=, type: string, format: "HH:mm:ss.SSS or SSS", units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: Scan Duration ; Scan Duration, type: string ; float, format: "ss ; ~", units: ~}
                  whereDicom:   {file: ~, keyName: Acquisition Time, type:  string, format: "SSS", units: s}
                  whereNifti:   {file: json, keyName: AcquisitionTime, type: string, format: "HH:mm:ss.SSS", units: ~}
                  
                  viewer: {category: Equipment}
                  json:   {tagJson: AcquisitionTime, type: string, format: "HH:mm:ss.SSS", units: ~}
                  
  Angulation Image:
                  wherePhilips: {file: PAR ; Xml, keyName: image angulation ; Angulation AP (Image_Info), type: float  ; float, format: ~, units: ~} # && Angulation FH && Angulation RL
                  
                  viewer: {category: Angulation-Position}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}
                  
  Angulation Midslice:
                  wherePhilips: {file: PAR ; Xml, keyName: Angulation midslice ; Angulation AP, type: float  ; float, format: ~, units: ~} # && Angulation FH && Angulation RL
                  
                  viewer: {category: Angulation-Position}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  BandWidth:
                  whereBruker:  {file: acqp, keyName: $SW_h=, type: float, format: ~, units: MHz}
                  whereNifti:   {file: json, keyName: BandWidth, type: float, format: ~, units: MHz}                  
                  
                  viewer: {category: MRI parameters}
                  json:   {tagJson: BandWidth, type: float, format: ~, units: ~}

  Byte Order:
                  whereBruker:  {file: visu_pars, keyName: $VisuCoreByteOrder=, type: string, format: ~, units: ~}
                  whereNifti:   {file: niftiheader, keyName: Endianness, type: string, format: ~, units: ~}                  
                  
                  viewer: {category: Dimensions}
                  json:   {tagJson: ByteOrder, type: string, format: ~, units: ~}
   
  Coil:
                  whereBruker:  {file: acqp, keyName: $ACQ_operation_mode=, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: Coil, type: string, format: ~, units: ~}
                  
                  viewer: {category: Equipment}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  Columns:
                  whereDicom:   {file: ~, keyName: Columns, type: int, format: ~, units: ~}
                  
                  viewer: {category: ~}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}
  
  Creation Date:
                  whereBruker:  {file: subject, keyName: $SUBJECT_date=, type: string, format: "yyyy-MM-dd'T'HH:mm:ss','SSSZZZZ or HH:mm:ss dd MMM yyyy", units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: Examination date/time ; Examination Date, type: string ; string, format: "yyyy.MM.dd / hHH:mm:ss ; yyyy.MM.dd", units: ~}
                  whereDicom:   {file: ~, keyName: Study Date, type: string, format: "yyyyMMdd", units: ~}
                  whereNifti:   {file: json, keyName: CreationDate, type: string, format: "yyyy-MM-dd HH:mm:ss", units: ~}

                  viewer: {category: Equipment}
                  json:   {tagJson: CreationDate, type: string, format: "yyyy-MM-dd HH:mm:ss", units: ~}         
 
  Data Type:
                  whereBruker:  {file: visu_pars, keyName: $VisuCoreWordType=, type: string, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: image pixel size ; Pixel Size, type: string ; int, format: ~, units: ~}
                  whereDicom:   {file: dirfile,dicomdir, keyName: Bits Allocated, type: string, format: ~, units: ~}
                  whereNifti:   {file: niftiheader, keyName: Datatype, type: string, format: ~, units: ~}

                  viewer: {category: Dimensions}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  Echo Time:
                  whereBruker:  {file: acqp, keyName: $ACQ_echo_time=, type: float, format: ~, units: ms}
                  wherePhilips: {file: PAR ; Xml, keyName: echo_time ; Echo Time, type: float  ; float, format: ~, units: ms   ; ms}
                  whereDicom:   {file: dirfile, keyName: Echo Time, type: float, format: ~, units: ms}
                  whereNifti:   {file: json, keyName: EchoTime, type: float, format: ~, units: ms}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: EchoTime, type: float, format: ~, units: ms}

  Flip Angle:
                  whereBruker:  {file: acqp, keyName: $ACQ_flip_angle=, type: float, format: ~, units: degree}
                  wherePhilips: {file: PAR ; Xml, keyName: image_flip_angle ; Image Flip Angle, type: float  ; float, format: ~, units: ~ ; degree}
                  whereDicom:   {file: dirfile, keyName: Flip Angle, type: float, format: ~, units: degree}
                  whereNifti:   {file: json, keyName: FlipAngle, type: float, format: ~, units: degree}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: FlipAngle, type: float, format: ~, units: degree}

  FOV:
                  whereBruker:  {file: reco, keyName: $RECO_fov=, type: float, format: ~, units: mm}
                  wherePhilips: {file: PAR ; Xml, keyName: FOV  ; FOV AP , type: float  ; float, format: ~, units: ~ ; degree} # && FOV FH && FOV RL
                  whereNifti:   {file: json, keyName: FOV, type: float, format: ~, units: mm}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: FOV, type: float, format: ~, units: mm}
       
  Images In Acquisition:
                  whereBruker:  {file: visu_pars, keyName: $VisuCoreFrameCount=, type: int, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: index in REC file   ; Index, type: int  ; int, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Number of Frames, type: int, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: ImageInAcquisition, type: int, format: ~, units: ~}

                  viewer: {category: Dimensions}
                  json:   {tagJson: ImageInAcquisition, type: int, format: ~, units: ~}

  Imaged Nucleus:
                  whereBruker:  {file: acqp, keyName: $NUCLEUS=, type: string, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Imaged Nucleus, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: ImagedNucleus, type: string, format: ~, units: ~}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: ImagedNucleus, type: string, format: ~, units: ~}  
                  
  Image Orientation Patient:
                  whereBruker:  {file: visu_pars, keyName: $VisuCoreOrientation=, type: float, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: image angulation ; Angulation AP , type: float  ; float, format: ~, units: degree ; degree} # && Angulation FH && Angulation RL
                  whereDicom:   {file: dirfile, keyName: Image Orientation (Patient), type: float, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: ImageOrientationPatient, type: float, format: ~, units: ~}

                  viewer: {category: ~}
                  json:   {tagJson: ImageOrientationPatient, type: float, format: ~, units: ~}
  
  Image Position Patient:
                  whereBruker:  {file: visu_pars, keyName: $VisuCorePosition=, type: float, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: image offcentre  ; Offcenter AP, type: float  ; float, format: ~, units: mm   ; ~} # && Offcenter FH && Offcenter RL
                  whereDicom:   {file: dirfile, keyName: Image Position (Patient), type: float, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: ImagePositionPatient, type: float, format: ~, units: ~}

                  viewer: {category: ~}
                  json:   {tagJson: ImagePositionPatient, type: float, format: ~, units: ~}  
  
  Image Type:
                  whereBruker:  {file: visu_pars, keyName: $VisuCoreFrameType=, type: string, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: image_type_mr  ; Type, type: string ; string, format: ~, units: ~}
                  whereDicom:   {file: dirfile, dicomdir, keyName: Image Type, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: ImageType, type: string, format: ~, units: ~}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: ImageType, type: string, format: ~, units: ~}  
  
  Imaging Frequency:
                  whereBruker:  {file: visu_pars, keyName: $VisuAcqImagingFrequency=, type: float, format: ~, units: MHz}
                  whereDicom:   {file: ~, keyName: Imaging Frequency, type: float, format: ~, units: MHz}
                  whereNifti:   {file: json, keyName: ImagingFrequency, type: float, format: ~, units: MHz}

                  viewer: {category: ~}
                  json:   {tagJson: ImagingFrequency, type: float, format: ~, units: MHz}

  Inversion Time:
                  whereBruker:  {file: visu_pars, keyName: $ACQ_inversion_time=, type: float, format: ~, units: ms}
                  whereDicom:   {file: dirfile, keyName: Inversion Time, type: float, format: ~, units: ms}
                  whereNifti:   {file: json, keyName: InversionTime, type: float, format: ~, units: ms}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: InversionTime, type: float, format: ~, units: ms}

  Manufacturer:
                  whereBruker:  {file: method, keyName: ORIGIN=, type: string, format: ~, units: ms}
                  whereDicom:   {file: ~, keyName: Manufacturer, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: Manufacturer, type: string, format: ~, units: ms}

                  viewer: {category: Equipment}
                  json:   {tagJson: Manufacturer, type: string, format: ~, units: ms}

  Manufacturer's Model:
                  whereDicom:   {file: ~, keyName: Manufacturer's Model Name, type: string, format: ~, units: ~}
                   
                  viewer: {category: Equipment}
                  json:   {tagJson: Manufacturer's Model, type: string, format: ~, units: ~}                  

  Modality:
                  whereDicom:   {file: ~, keyName: Modality, type: string, format: ~, units: ~}
                  viewer: {category: Test}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}
  
  Number Of Averages:
                  whereBruker:  {file: visu_pars, keyName: $VisuAcqNumberOfAverages=, type: int, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: number of averages   ; No Averages, type: int   ; int, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Number of Averages, type: int, format: ~, units: ~}
                  
                  viewer: {category: MRI parameters}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  Number Of Diffusion:
                  wherePhilips: {file: PAR ; Xml, keyName: diffusion b value number  ; BValue, type: int   ; int, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Diffusion b-value, type: int, format: ~, units: ~}
                  
                  viewer: {category: Dimensions}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  Number Of Echo:
                  whereBruker:  {file: method, keyName: $PVM_NEchoImages=, type: ~, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: echo number  ; Echo, type: int   ; int, format: ~, units: ~}
                  whereDicom:   {file: dirfile, keyName: Echo Time, type: ~, format: ~, units: ~}
                  
                  viewer: {category: Dimensions}
                  
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  Number Of Repetition:
                  whereBruker:  {file: method, keyName: $PVM_NRepetitions=, type: int, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: Max. number of dynamics   ; Max No Dynamics, type: int   ; int, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Temporal Position, type: int, format: ~, units: ~}
                  
                  viewer: {category: Dimensions}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  Number Of Slice:
                  whereBruker:  {file: visu_pars, keyName: $VisuCorePosition=, type: int, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: Max. number of slices/locations  ; Max No Slices, type: int   ; int, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Image Position Patient, type: int, format: ~, units: ~} #Slice Location
                  
                  viewer: {category: Dimensions}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  Patient BirthDate:
                  whereBruker:  {file: subject, keyName: $SUBJECT_dbirth=, type: string, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Patient's Birth Date, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: PatientBirthDate, type: string, format: ~, units: ~}

                  viewer: {category: ~}
                  json:   {tagJson: PatientBirthDate, type: string, format: ~, units: ~}

  Patient ID:
                  whereBruker:  {file: subject, keyName: $SUBJECT_id=, type: string, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Patient ID, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: PatientID, type: string, format: ~, units: ~}

                  viewer: {category: ~}
                  json:   {tagJson: PatientID, type: string, format: ~, units: ~}

  Patient Name:
                  whereBruker:  {file: subject, keyName: $SUBJECT_name_string=, type: string, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: Patient name   ; Patient Name, type: string ; string, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Patient's Name, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: PatientName, type: string, format: ~, units: ~}

                  viewer: {category: ~}
                  json:   {tagJson: PatientName, type: string, format: ~, units: ~}

  Patient Position:
                  whereBruker:  {file: visu_pars, keyName: $VisuSubjectPosition=, type: string, format: ~, units: ~}
                  whereDicom:   {file: dirfile, keyName: Patient Position, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: PatientPosition, type: string, format: ~, units: ~}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: PatientPosition, type: string, format: ~, units: ~}

  Patient Sex:
                  whereBruker:  {file: subject, keyName: $SUBJECT_sex=, type: string, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Patient's Sex, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: PatientSex, type: string, format: ~, units: ~}

                  viewer: {category: ~}
                  json:   {tagJson: PatientSex, type: string, format: ~, units: ~}

  Patient Weight:
                  whereBruker:  {file: subject, keyName: $SUBJECT_weight=, type: float, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Patient's Weight, type: float, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: PatientWeight, type: float, format: ~, units: ~}

                  viewer: {category: ~}
                  json:   {tagJson: PatientWeight, type: float, format: ~, units: ~}

  Pixel Bandwidth:
                  whereBruker:  {file: visu_pars, keyName: $VisuAcqPixelBandwidth=, type: float, format: ~, units: ms}
                  whereDicom:   {file: ~, keyName: Pixel Bandwidth, type: float, format: ~, units: ms}
                  whereNifti:   {file: json, keyName: PixelBandwidth, type: float, format: ~, units: ms}

                  viewer: {category: ~}
                  json:   {tagJson: PixelBandwidth, type: float, format: ~, units: ms}

  Pixel Spacing:
                  whereBruker:  {file: method, keyName: $PVM_SpatResol=, type: int, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Pixel Spacing, type: int, format: ~, units: ~}
                  
                  viewer: {category: ~}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}
  
  Position Image:              
                  wherePhilips: {file: PAR ; Xml, keyName: image offcentre  ; Offcenter AP, type: float  ; float, format: ~, units: ~} # && Off Center FH && Off Center RL, type: float  ; float, format: ~, units: ~}
                  
                  viewer: {category: Angulation-Position}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}
         
  Position Midslice:              
                  wherePhilips: {file: PAR ; Xml, keyName: Off Centre midslice ; Off Center AP , type: float  ; float, format: ~, units: ~} # && Off Center FH && Off Center RL
                  
                  viewer: {category: Angulation-Position}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}
  
  Protocol:
                  whereBruker:  {file: acqp, keyName: $ACQ_protocol_name=, type: string, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: Protocol name  ; Protocol Name, type: string ; string, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Protocol Name, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: ProtocolName, type: string, format: ~, units: ~}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: ProtocolName, type: string, format: ~, units: ~}
          
  Read Direction:
                  whereBruker:  {file: method, keyName: $PVM_SPackArrReadOrient=, type: string, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Acquisition Matrix, type: string, format: ~, units: ~} #Multi-valued: frequency rows\frequency columns\phase rows\phase columns.
                  whereNifti:   {file: json, keyName: ReadDirection, type: string, format: ~, units: ~}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: ReadDirection, type: string, format: ~, units: ~}

  Repetition Time:
                  whereBruker:  {file: acqp, keyName: $ACQ_repetition_time=, type: float, format: ~, units: ms}
                  wherePhilips: {file: PAR ; Xml, keyName: Repetition time  ; Repetition Times, type: float  ; float, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Repetition Time, type: float, format: ~, units: ms}
                  whereNifti:   {file: json, keyName: RepetitionTime, type: float, format: ~, units: ms}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: RepetitionTime, type: float, format: ~, units: ms}

  Rows:
                  whereDicom:   {file: ~, keyName: Rows, type: int, format: ~, units: ~}
                  
                  viewer: {category: ~}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}
  Scan Mode:
                  whereBruker:  {file: visu_pars, keyName: $VisuCoreDim=, type: float, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: Scan mode ; Scan Mode, type: string ; string, format: ~, units: ms}
                  whereDicom:   {file: ~, keyName: MR Acquisition Type, type: float, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: ScanMode, type: string, format: ~, units: ~}

                  viewer: {category: Dimensions}
                  json:   {tagJson: ScanMode, type: string, format: ~, units: ~}
          
  Scan Resolution:
                  whereBruker:  {file: reco, keyName: $RECO_size=, type: int, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: recon resolution ; Resolution X , type: int  ; int, format: ~, units: ~} # && Resolution Y
                  whereDicom:   {file: ~, keyName: Rows & Columns, type: int, format: ~, units: ~}
                  whereNifti:   {file: niftiheader, keyName: Dataset dimensions, type: int, format: ~, units: ~}

                  viewer: {category: Dimensions}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  Scanning Sequence:
                  wherePhilips: {file: PAR ; Xml, keyName: scanning sequence ; Sequence, type: string ; string, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Scanning Sequence, type: string, format: ~, units: ~}
                  
                  viewer: {category: MRI parameters}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~} 
 
  Sequence Name:
                  whereBruker:  {file: visu_pars, keyName: $VisuAcqSequenceName=, type: string, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: Technique ; Technique, type: string ; string, format: ~, units: ~}
                  whereDicom:   {file: dirfile, keyName: Sequence Name, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: SequenceName, type: string, format: ~, units: ~}

                  viewer: {category: ~}
                  json:   {tagJson: SequenceName, type: string, format: ~, units: ~}

  Session:
                  whereBruker:  {file: acqp, keyName: $ACQ_operator=, type: string, format: ~, units: ~}
                  
                  viewer: {category: Equipment}
                  json:   {tagJson: Session, type: string, format: ~, units: ~}
                  
  Slice Gap:
                  wherePhilips: {file: PAR ; Xml, keyName: slice gap ; Slice Gap, type: float ; float, format: ~, units: mm}
                  
                  viewer: {category: MRI parameters}
                  json:   {tagJson: SliceThickness, type: float, format: ~, units: mm}

  Slice Orientation:
                  whereBruker:  {file: method, keyName: $PVM_SPackArrSliceOrient=, type: string, format: ~, units: ~}
                  wherePhilips:  {file: PAR ; Xml, keyName: slice orientation ; Slice Orientation, type: string ; string, format: ~, units: ~}
                  whereDicom:  {file: dirfile, keyName: Image Orientation (Patient), type: string, format: ~, units: ~}                 
                  whereNifti:   {file: json, keyName: SliceOrientation, type: string, format: ~, units: ~}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: SliceOrientation, type: string, format: ~, units: ~}

  Slice Position:
                  whereBruker:  {file: visu_pars, keyName: $VisuCorePosition=, type: string, format: ~, units: ~}
                  whereDicom:   {file: dirfile, keyName: Slice Location, type: string, format: ~, units: ~}
                  
                  viewer: {category: ~}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}
          
  Slice Separation:
                  whereBruker:  {file: acqp, keyName: $ACQ_slice_sepn=, type: float, format: ~, units: mm}
                  whereDicom:   {file: ~, keyName: Spacing Between Slices, type: float, format: ~, units: mm}
                  whereNifti:   {file: json, keyName: SpacingBetweenSlices, type: float, format: ~, units: mm}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: SpacingBetweenSlices, type: float, format: ~, units: mm}

  Slice Thickness:
                  whereBruker:  {file: acqp, keyName: $ACQ_slice_thick=, type: float, format: ~, units: mm}
                  wherePhilips: {file: PAR ; Xml, keyName: slice thickness ; Slice Thickness, type: float ; float, format: ~, units: mm}
                  whereDicom:   {file: ~, keyName: Slice Thickness, type: float, format: ~, units: mm}
                  whereNifti:   {file: json, keyName: SliceThickness, type: float, format: ~, units: mm}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: SliceThickness, type: float, format: ~, units: mm}

  Software Version:
                  whereBruker:  {file: visu_pars, keyName: $VisuCreatorVersion=, type: string, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Software Versions(s), type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: SoftwareVersions, type: string, format: ~, units: ~}

                  viewer: {category: Equipment}
                  json:   {tagJson: SoftwareVersions, type: string, format: ~, units: ~}

  Spatial Resolution:
                  whereBruker:  {file: method, keyName: $PVM_SpatResol=, type: string, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: pixel spacing  ; Pixel Spacing, type: float ; float, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Pixel Spacing, type: float, format: ~, units: ~}
                  whereNifti:   {file: niftiheader, keyName: Grid spacings, type: int, format: ~, units: ~}

                  viewer: {category: MRI parameters}
                  json:   {tagJson: ~, type: ~, format: ~, units: ~}

  Station Name:
                  whereBruker:  {file: acqp, keyName: $ACQ_station=, type: string, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Station Name, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: StationName, type: string, format: ~, units: ~}

                  viewer: {category: Equipment}
                  json:   {tagJson: StationName, type: string, format: ~, units: ~}

  Study Name:
                  whereBruker:  {file: subject, keyName: $SUBJECT_study_name=, type: string, format: ~, units: ~}
                  wherePhilips: {file: PAR ; Xml, keyName: Examination name ; Examination Name, type: string ; string, format: ~, units: ~}
                  whereDicom:   {file: ~, keyName: Study ID, type: string, format: ~, units: ~}
                  whereNifti:   {file: json, keyName: StudyName, type: string, format: ~, units: ~}

                  viewer: {category: ~}
                  json:   {tagJson: StudyName, type: string, format: ~, units: ~}